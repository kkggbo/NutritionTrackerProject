<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.nt.recipe.mapper.RecipeMapper">

    <insert id="insertRecipe" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO recipe(user_id, name, description, cook_time, meal_type, step, total_calories, total_protein, total_fat, total_carbs)
        VALUES(#{userId}, #{name}, #{description}, #{cookTime}, #{mealType}, #{steps}, #{totalCalories}, #{totalProtein}, #{totalFat}, #{totalCarbs})
    </insert>

    <insert id="insertRecipeFoods">
        INSERT INTO recipe_food (recipe_id, food_id, weight)
        VALUES
        <foreach collection="foods" item="item" separator=",">
            (#{item.recipeId}, #{item.foodId}, #{item.weight})
        </foreach>
    </insert>

    <select id="getRecipeById" resultType="com.nt.recipe.domain.po.RecipePO">
        SELECT
            id,
            user_id,
            name,
            description,
            cook_time,
            meal_type,
            step,
            total_calories,
            total_protein,
            total_carbs,
            total_fat
        FROM recipe
        WHERE id = #{id}
    </select>

    <update id="updateRecipe" parameterType="com.nt.recipe.domain.po.RecipePO">
        UPDATE recipe
        SET name = #{name},
            user_id = #{userId},
            description = #{description},
            cook_time = #{cookTime},
            meal_type = #{mealType},
            step = #{steps},
            total_calories = #{totalCalories},
            total_protein = #{totalProtein},
            total_fat = #{totalFat},
            total_carbs = #{totalCarbs},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <select id="recipeQuery" resultType="com.nt.recipe.domain.vo.RecipeListVO">
        SELECT
            r.id,
            r.name,
            r.description,
            r.cook_time AS cookTime,
            r.meal_type AS mealType,
            r.total_calories AS totalCalories
        FROM recipe r
        JOIN recipe_food rf ON r.id = rf.recipe_id
        WHERE 1=1
        <if test="name != null and name != ''">
            AND r.name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="cookTimeMin != null">
            AND r.cook_time <![CDATA[ >= ]]> #{cookTimeMin}
        </if>
        <if test="cookTimeMax != null">
            AND r.cook_time <![CDATA[ <= ]]> #{cookTimeMax}
        </if>
        <if test="caloriesMin != null">
            AND r.total_calories <![CDATA[ >= ]]> #{caloriesMin}
        </if>
        <if test="caloriesMax != null">
            AND r.total_calories <![CDATA[ <= ]]> #{caloriesMax}
        </if>
        <if test="mealType != null and mealType != ''">
            AND r.meal_type = #{mealType}
        </if>
        <if test="foodIds != null and foodCount > 0">
            AND rf.food_id IN
            <foreach collection="foodIds" item="fid" open="(" separator="," close=")">
                #{fid}
            </foreach>
        </if>
        GROUP BY r.id
        <if test="foodIds != null and foodCount > 0">
            HAVING COUNT(DISTINCT rf.food_id) = #{foodCount}
        </if>
        ORDER BY r.create_time DESC
    </select>


</mapper>